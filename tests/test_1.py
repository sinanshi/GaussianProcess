from gp_emulator import GaussianProcess
import numpy as np
import pytest

def simulate_rosenrock (x):
    """Test with simulated data generated by Rosenrock function
    see https://www.sfu.ca/~ssurjano/rosen.html
    """
    d = x.size
    xi = x[0 : (d - 1)]
    xnext = x[1 : d ]
    y = sum(100 * (xnext - xi ** 2) ** 2 + (xi - 1) ** 2)
    return y


def test_rosenrock():
    """The values are from the R script from the website"""
    x = np.array([1, 1, 1])
    y = simulate_rosenrock(x)
    assert y == 0

    x = np.array([0, 0, 1])
    y = simulate_rosenrock(x)
    assert y == 102

    x = np.array([-0.50, -0.50, -0.99, 4.50])
    y = simulate_rosenrock(x)
    assert y == pytest.approx(1457.44)

    x = np.array([1., 100, -0.440, -0.999, 23534])
    y = simulate_rosenrock(x)
    assert y == pytest.approx(65382088377)



def test_new():
    assert 1 == 1

